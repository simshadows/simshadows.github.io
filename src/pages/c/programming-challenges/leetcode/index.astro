---
import Layout from "@layouts/GeneralLayout.astro";

import {processSolLayoutFrontmatter} from "./_utils.ts";

import SolLink from "./_index.SolLink.astro";

const allPosts = (await Astro.glob("./sol/*.mdx")).map(
    (x) => {
        if (!x.url) throw new Error(`Expected non-empty string. Instead got: ${x.url}`);
        return {
            url: x.url,
            fm: processSolLayoutFrontmatter(x.frontmatter),
        };
    }
);
allPosts.sort((a, b) => a.fm.num - b.fm.num)
---

<Layout
    title="My Leetcode Solutions"
    description="My Leetcode solutions!"
    keywords={["data structures and algorithms", "dsa", "oa", "interview", "competitive programming", "programming challenges"]}
>

<ul class="rootlevel">
    {allPosts.map((post) =>
        (!post.fm.wip) && <SolLink url={post.url} fm={post.fm} />
    )}
</ul>

</Layout>


---
import {render} from "astro:content";

import {fm} from "@helpers/frontmatter";
import PaginationNavigatorBar from "@components/PaginationNavigatorBar";
import {getCurationCollectionPaginated} from "@helpers/collections/curation";

import Layout from "./_layouts/CurationBaseLayout.astro";

import "./_index.css";

const groups = (await getCurationCollectionPaginated()).groups;
const posts = groups[0];
if (!posts) throw new Error();

const mockedPage = {
    currentPage: 1,
    lastPage: groups.length,
    url: {
        current: "/curation/",
        prev: undefined,
        next: "/curation/2/",
        first: undefined,
        last: `/curation/${groups.length}/`,
    },
};
function numToURL(i: number): string {
    return `/curation/${i}/`;
}

export const frontmatter = fm({
    title: "Sim's Internet Curation",
    description: "A hand-curated feed of internet content.",
    keywords: ["content curation"],
});
---

<Layout {...frontmatter}>

<div id="welcome">
    <p><a href="./about/">About This Page</a></p>
    <p><em>Disclaimer: Posts shown here or any commentary I write may contain factual errors or imbalanced representation.</em></p>
</div>

<PaginationNavigatorBar page={mockedPage} numberToURL={numToURL}/>

{posts.map(async (p) => {
    const renderedContent = await (async ()=>{
        if (!p.collectionEntry) return null;
        const {Content} = await render(p.collectionEntry);
        return <Content/>;
    })();

    return <article class="post">
        <div class="post-date">{p.date.toISOString()}</div>
        <h3 class="post-title">{p.title}</h3>
        {(!!p.synopsis) &&
            <p>{p.synopsis}</p>
        }
        {(!!p.youtubeVideoID) &&
            <iframe width="560" height="315" src={`https://www.youtube.com/embed/${p.youtubeVideoID}`} title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
        }
        {renderedContent}
    </article>
})}

<PaginationNavigatorBar page={mockedPage} numberToURL={numToURL}/>


</Layout>

